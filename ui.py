# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.ApplicationModal)
        MainWindow.resize(1066, 499)
        MainWindow.setMinimumSize(QtCore.QSize(1066, 499))
        MainWindow.setMaximumSize(QtCore.QSize(1066, 499))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setGeometry(QtCore.QRect(10, 0, 361, 471))
        self.tabWidget.setObjectName("tabWidget")
        self.tabAnime = QtWidgets.QWidget()
        self.tabAnime.setObjectName("tabAnime")
        self.lbl_anime_pic = QtWidgets.QLabel(self.tabAnime)
        self.lbl_anime_pic.setGeometry(QtCore.QRect(0, 20, 351, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.lbl_anime_pic.setFont(font)
        self.lbl_anime_pic.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lbl_anime_pic.setScaledContents(False)
        self.lbl_anime_pic.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_anime_pic.setWordWrap(False)
        self.lbl_anime_pic.setObjectName("lbl_anime_pic")
        self.progress_anime = QtWidgets.QProgressBar(self.tabAnime)
        self.progress_anime.setGeometry(QtCore.QRect(10, 370, 341, 23))
        self.progress_anime.setProperty("value", 0)
        self.progress_anime.setOrientation(QtCore.Qt.Horizontal)
        self.progress_anime.setObjectName("progress_anime")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.tabAnime)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(20, 170, 131, 201))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.check_sftp_anime = QtWidgets.QCheckBox(self.verticalLayoutWidget)
        self.check_sftp_anime.setObjectName("check_sftp_anime")
        self.verticalLayout.addWidget(self.check_sftp_anime)
        self.check_post_site = QtWidgets.QCheckBox(self.verticalLayoutWidget)
        self.check_post_site.setObjectName("check_post_site")
        self.verticalLayout.addWidget(self.check_post_site)
        self.check_malf_anime = QtWidgets.QCheckBox(self.verticalLayoutWidget)
        self.check_malf_anime.setEnabled(False)
        self.check_malf_anime.setStatusTip("")
        self.check_malf_anime.setWhatsThis("")
        self.check_malf_anime.setObjectName("check_malf_anime")
        self.verticalLayout.addWidget(self.check_malf_anime)
        self.check_nonlink_anime = QtWidgets.QCheckBox(self.verticalLayoutWidget)
        self.check_nonlink_anime.setObjectName("check_nonlink_anime")
        self.verticalLayout.addWidget(self.check_nonlink_anime)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.tabAnime)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(170, 170, 171, 201))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.btn_pic_anime = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.btn_pic_anime.setObjectName("btn_pic_anime")
        self.verticalLayout_2.addWidget(self.btn_pic_anime)
        self.btn_video_anime = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.btn_video_anime.setObjectName("btn_video_anime")
        self.verticalLayout_2.addWidget(self.btn_video_anime)
        self.btn_upload_anime = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.btn_upload_anime.setEnabled(False)
        self.btn_upload_anime.setObjectName("btn_upload_anime")
        self.verticalLayout_2.addWidget(self.btn_upload_anime)
        self.line_nondefoult_number_anime = QtWidgets.QLineEdit(self.tabAnime)
        self.line_nondefoult_number_anime.setGeometry(QtCore.QRect(20, 70, 101, 31))
        self.line_nondefoult_number_anime.setWhatsThis("")
        self.line_nondefoult_number_anime.setObjectName("line_nondefoult_number_anime")
        self.link_site = QtWidgets.QLineEdit(self.tabAnime)
        self.link_site.setGeometry(QtCore.QRect(130, 70, 211, 31))
        self.link_site.setWhatsThis("")
        self.link_site.setObjectName("link_site")
        self.link_malfurik_anime = QtWidgets.QLineEdit(self.tabAnime)
        self.link_malfurik_anime.setEnabled(False)
        self.link_malfurik_anime.setGeometry(QtCore.QRect(130, 120, 211, 31))
        self.link_malfurik_anime.setClearButtonEnabled(False)
        self.link_malfurik_anime.setObjectName("link_malfurik_anime")
        self.progress_value = QtWidgets.QLabel(self.tabAnime)
        self.progress_value.setGeometry(QtCore.QRect(10, 370, 341, 20))
        self.progress_value.setObjectName("progress_value")
        self.dateEdit = QtWidgets.QDateEdit(self.tabAnime)
        self.dateEdit.setGeometry(QtCore.QRect(20, 128, 101, 22))
        self.dateEdit.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.dateEdit.setAutoFillBackground(False)
        self.dateEdit.setObjectName("dateEdit")
        self.tabWidget.addTab(self.tabAnime, "")
        self.tabDorama = QtWidgets.QWidget()
        self.tabDorama.setEnabled(True)
        self.tabDorama.setObjectName("tabDorama")
        self.pushButton_5 = QtWidgets.QPushButton(self.tabDorama)
        self.pushButton_5.setGeometry(QtCore.QRect(30, 170, 75, 23))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.tabDorama)
        self.pushButton_6.setGeometry(QtCore.QRect(30, 130, 75, 23))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_7 = QtWidgets.QPushButton(self.tabDorama)
        self.pushButton_7.setGeometry(QtCore.QRect(30, 100, 75, 23))
        self.pushButton_7.setObjectName("pushButton_7")
        self.progressBar = QtWidgets.QProgressBar(self.tabDorama)
        self.progressBar.setGeometry(QtCore.QRect(30, 70, 291, 23))
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")
        self.label = QtWidgets.QLabel(self.tabDorama)
        self.label.setGeometry(QtCore.QRect(130, 30, 47, 21))
        self.label.setObjectName("label")
        self.checkBox_4 = QtWidgets.QCheckBox(self.tabDorama)
        self.checkBox_4.setGeometry(QtCore.QRect(30, 220, 70, 17))
        self.checkBox_4.setObjectName("checkBox_4")
        self.checkBox_5 = QtWidgets.QCheckBox(self.tabDorama)
        self.checkBox_5.setGeometry(QtCore.QRect(30, 250, 70, 17))
        self.checkBox_5.setObjectName("checkBox_5")
        self.checkBox_6 = QtWidgets.QCheckBox(self.tabDorama)
        self.checkBox_6.setGeometry(QtCore.QRect(30, 280, 70, 17))
        self.checkBox_6.setObjectName("checkBox_6")
        self.tabWidget.addTab(self.tabDorama, "")
        self.logging_upload = QtWidgets.QTextEdit(self.centralwidget)
        self.logging_upload.setGeometry(QtCore.QRect(380, 20, 261, 411))
        self.logging_upload.setMinimumSize(QtCore.QSize(261, 411))
        self.logging_upload.setMaximumSize(QtCore.QSize(261, 411))
        self.logging_upload.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.logging_upload.setReadOnly(True)
        self.logging_upload.setObjectName("logging_upload")
        self.text_send_dub = QtWidgets.QTextEdit(self.centralwidget)
        self.text_send_dub.setGeometry(QtCore.QRect(670, 20, 181, 221))
        self.text_send_dub.setReadOnly(True)
        self.text_send_dub.setObjectName("text_send_dub")
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setGeometry(QtCore.QRect(870, 10, 191, 451))
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 189, 449))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.btn_search_dubs = QtWidgets.QPushButton(self.centralwidget)
        self.btn_search_dubs.setGeometry(QtCore.QRect(680, 400, 161, 31))
        self.btn_search_dubs.setObjectName("btn_search_dubs")
        self.line_id_chat = QtWidgets.QLineEdit(self.centralwidget)
        self.line_id_chat.setGeometry(QtCore.QRect(676, 248, 171, 20))
        self.line_id_chat.setObjectName("line_id_chat")
        self.line_search_dub_name_serial = QtWidgets.QLineEdit(self.centralwidget)
        self.line_search_dub_name_serial.setGeometry(QtCore.QRect(676, 278, 171, 20))
        self.line_search_dub_name_serial.setObjectName("line_search_dub_name_serial")
        self.line_search_dub_number_serial = QtWidgets.QLineEdit(self.centralwidget)
        self.line_search_dub_number_serial.setGeometry(QtCore.QRect(676, 308, 171, 20))
        self.line_search_dub_number_serial.setObjectName("line_search_dub_number_serial")
        self.line_count_dubbers = QtWidgets.QLineEdit(self.centralwidget)
        self.line_count_dubbers.setGeometry(QtCore.QRect(676, 338, 171, 20))
        self.line_count_dubbers.setReadOnly(True)
        self.line_count_dubbers.setObjectName("line_count_dubbers")
        self.line_prefix_name_serial = QtWidgets.QLineEdit(self.centralwidget)
        self.line_prefix_name_serial.setGeometry(QtCore.QRect(676, 368, 171, 20))
        self.line_prefix_name_serial.setObjectName("line_prefix_name_serial")
        self.btn_open_timming = QtWidgets.QPushButton(self.centralwidget)
        self.btn_open_timming.setEnabled(True)
        self.btn_open_timming.setGeometry(QtCore.QRect(410, 440, 241, 31))
        self.btn_open_timming.setObjectName("btn_open_timming")
        self.block_screen = QtWidgets.QLabel(self.centralwidget)
        self.block_screen.setEnabled(True)
        self.block_screen.setGeometry(QtCore.QRect(0, 0, 1061, 471))
        self.block_screen.setAutoFillBackground(False)
        self.block_screen.setStyleSheet("")
        self.block_screen.setObjectName("block_screen")
        self.textedit_timming_ad = QtWidgets.QTextEdit(self.centralwidget)
        self.textedit_timming_ad.setGeometry(QtCore.QRect(30, 480, 271, 271))
        self.textedit_timming_ad.setReadOnly(True)
        self.textedit_timming_ad.setObjectName("textedit_timming_ad")
        self.textedit_name_ad = QtWidgets.QTextEdit(self.centralwidget)
        self.textedit_name_ad.setGeometry(QtCore.QRect(330, 480, 271, 271))
        self.textedit_name_ad.setReadOnly(True)
        self.textedit_name_ad.setObjectName("textedit_name_ad")
        self.list_timming = QtWidgets.QListWidget(self.centralwidget)
        self.list_timming.setGeometry(QtCore.QRect(630, 480, 271, 271))
        self.list_timming.setAcceptDrops(False)
        self.list_timming.setObjectName("list_timming")
        self.btn_add_timming = QtWidgets.QPushButton(self.centralwidget)
        self.btn_add_timming.setGeometry(QtCore.QRect(910, 480, 141, 31))
        self.btn_add_timming.setObjectName("btn_add_timming")
        self.btn_del_timming = QtWidgets.QPushButton(self.centralwidget)
        self.btn_del_timming.setGeometry(QtCore.QRect(910, 530, 141, 31))
        self.btn_del_timming.setObjectName("btn_del_timming")
        self.tabWidget.raise_()
        self.logging_upload.raise_()
        self.text_send_dub.raise_()
        self.scrollArea.raise_()
        self.btn_search_dubs.raise_()
        self.line_id_chat.raise_()
        self.line_search_dub_name_serial.raise_()
        self.line_search_dub_number_serial.raise_()
        self.line_count_dubbers.raise_()
        self.line_prefix_name_serial.raise_()
        self.textedit_timming_ad.raise_()
        self.textedit_name_ad.raise_()
        self.list_timming.raise_()
        self.btn_add_timming.raise_()
        self.btn_del_timming.raise_()
        self.btn_open_timming.raise_()
        self.block_screen.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1066, 21))
        self.menuBar.setObjectName("menuBar")
        self.menu = QtWidgets.QMenu(self.menuBar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menuBar)
        self.menu_2.setObjectName("menu_2")
        self.menu_3 = QtWidgets.QMenu(self.menuBar)
        self.menu_3.setObjectName("menu_3")
        MainWindow.setMenuBar(self.menuBar)
        self.menu_application = QtWidgets.QAction(MainWindow)
        self.menu_application.setObjectName("menu_application")
        self.menu_vk = QtWidgets.QAction(MainWindow)
        self.menu_vk.setObjectName("menu_vk")
        self.menu_tg = QtWidgets.QAction(MainWindow)
        self.menu_tg.setObjectName("menu_tg")
        self.menu_server = QtWidgets.QAction(MainWindow)
        self.menu_server.setCheckable(False)
        self.menu_server.setObjectName("menu_server")
        self.menu_animaunt = QtWidgets.QAction(MainWindow)
        self.menu_animaunt.setObjectName("menu_animaunt")
        self.menu_malfurik = QtWidgets.QAction(MainWindow)
        self.menu_malfurik.setObjectName("menu_malfurik")
        self.action = QtWidgets.QAction(MainWindow)
        self.action.setObjectName("action")
        self.menu_fix_timming = QtWidgets.QAction(MainWindow)
        self.menu_fix_timming.setObjectName("menu_fix_timming")
        self.menu.addAction(self.menu_application)
        self.menu.addAction(self.menu_vk)
        self.menu.addAction(self.menu_tg)
        self.menu.addAction(self.menu_server)
        self.menu_2.addAction(self.menu_animaunt)
        self.menu_2.addAction(self.menu_malfurik)
        self.menu_3.addAction(self.action)
        self.menu_3.addAction(self.menu_fix_timming)
        self.menuBar.addAction(self.menu.menuAction())
        self.menuBar.addAction(self.menu_2.menuAction())
        self.menuBar.addAction(self.menu_3.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Animaunt"))
        self.lbl_anime_pic.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:14pt;\">Картинка не выбрана</span></p></body></html>"))
        self.check_sftp_anime.setToolTip(_translate("MainWindow", "Загрузка на сервер. Обязательно надо выбрать видео файл."))
        self.check_sftp_anime.setText(_translate("MainWindow", "SFTP"))
        self.check_post_site.setToolTip(_translate("MainWindow", "Добавляет серию на сайт и обновляет его."))
        self.check_post_site.setText(_translate("MainWindow", "Обновить сайт"))
        self.check_malf_anime.setToolTip(_translate("MainWindow", "Если видео надо заливать на малфурик, то будет заливать на малфурик, обновляться страница на малфурике с таймингами и обновляться страница на анимаунте."))
        self.check_malf_anime.setText(_translate("MainWindow", "Малфурик"))
        self.check_nonlink_anime.setText(_translate("MainWindow", "Без ссылок"))
        self.btn_pic_anime.setText(_translate("MainWindow", "Картинка"))
        self.btn_video_anime.setText(_translate("MainWindow", "Выбрать видео"))
        self.btn_upload_anime.setText(_translate("MainWindow", "Загрузить"))
        self.line_nondefoult_number_anime.setToolTip(_translate("MainWindow", "Если номер серии другой, например 15.5 или подобное, впишите сюда это."))
        self.line_nondefoult_number_anime.setPlaceholderText(_translate("MainWindow", "Номер серии"))
        self.link_site.setToolTip(_translate("MainWindow", "Ссылка на анимаунт редактуру"))
        self.link_site.setPlaceholderText(_translate("MainWindow", "Ссылка анимаунт"))
        self.link_malfurik_anime.setToolTip(_translate("MainWindow", "Ссылка на малфурик редактуру"))
        self.link_malfurik_anime.setPlaceholderText(_translate("MainWindow", "Ссылка малфурик"))
        self.progress_value.setText(_translate("MainWindow", "<html><head/><body><p>Загружено: 0 МБ из 0 МБ. Скорость: 0 МБ/с</p></body></html>"))
        self.dateEdit.setToolTip(_translate("MainWindow", "Та дата, которая будет выставляться в дате выхода релиза."))
        self.dateEdit.setDisplayFormat(_translate("MainWindow", "yyyy-MM-dd"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabAnime), _translate("MainWindow", "Аниме"))
        self.pushButton_5.setText(_translate("MainWindow", "PushButton"))
        self.pushButton_6.setText(_translate("MainWindow", "PushButton"))
        self.pushButton_7.setText(_translate("MainWindow", "PushButton"))
        self.label.setText(_translate("MainWindow", "TextLabel"))
        self.checkBox_4.setText(_translate("MainWindow", "CheckBox"))
        self.checkBox_5.setText(_translate("MainWindow", "CheckBox"))
        self.checkBox_6.setText(_translate("MainWindow", "CheckBox"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabDorama), _translate("MainWindow", "Дорамы"))
        self.logging_upload.setPlaceholderText(_translate("MainWindow", "Лог"))
        self.text_send_dub.setPlaceholderText(_translate("MainWindow", "Сдача дорог дабберов"))
        self.btn_search_dubs.setText(_translate("MainWindow", "Найти"))
        self.line_id_chat.setToolTip(_translate("MainWindow", "Айди нужной беседы в которой дабберы сдают дороги."))
        self.line_id_chat.setPlaceholderText(_translate("MainWindow", "ID chat"))
        self.line_search_dub_name_serial.setToolTip(_translate("MainWindow", "<html><head/><body><p>Название серии, как подписывали дабберы (если папка называется по другому или же просто найти без выбора картинки)</p></body></html>"))
        self.line_search_dub_name_serial.setPlaceholderText(_translate("MainWindow", "Название серии"))
        self.line_search_dub_number_serial.setPlaceholderText(_translate("MainWindow", "№ серии"))
        self.line_count_dubbers.setPlaceholderText(_translate("MainWindow", "Кол-во даб."))
        self.line_prefix_name_serial.setPlaceholderText(_translate("MainWindow", "Префикс sp, фильм и тд."))
        self.btn_open_timming.setText(_translate("MainWindow", "🠋"))
        self.block_screen.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:72pt; font-weight:600; color:#ff0004;\">НЕ</span></p><p align=\"center\"><span style=\" font-size:72pt; font-weight:600; color:#ff0004;\">АВТОРИЗОВАН</span></p></body></html>"))
        self.btn_add_timming.setText(_translate("MainWindow", "Добавить"))
        self.btn_del_timming.setToolTip(_translate("MainWindow", "Удалить выбранный тайминг."))
        self.btn_del_timming.setText(_translate("MainWindow", "Удалить"))
        self.menu.setTitle(_translate("MainWindow", "Авторизация"))
        self.menu_2.setTitle(_translate("MainWindow", "Сайты"))
        self.menu_3.setTitle(_translate("MainWindow", "Помощь"))
        self.menu_application.setText(_translate("MainWindow", "Приложение"))
        self.menu_vk.setText(_translate("MainWindow", "ВКонтакте"))
        self.menu_tg.setText(_translate("MainWindow", "Телеграмм"))
        self.menu_server.setText(_translate("MainWindow", "Сервер"))
        self.menu_animaunt.setText(_translate("MainWindow", "Animaunt"))
        self.menu_malfurik.setText(_translate("MainWindow", "Malfurik"))
        self.action.setText(_translate("MainWindow", "Обновления"))
        self.menu_fix_timming.setText(_translate("MainWindow", "Фикс тайминг"))
